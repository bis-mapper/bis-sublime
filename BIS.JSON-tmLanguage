{
  "fileTypes": [
    "bis",
    "html",
    "run",
    "inf",
    "map",
    "txt"
  ],
  "name": "BIS",
  "firstLineMatch": "<!DOCTYPE|doctype|<(?i:html)|<\\?(?i:php)",
  "foldingStartMarker": "(?x)\n\t\t(<(?i:a|article|aside|audio|blockquote|body|canvas|datalist|details|div|dl|fieldset|figcaption|figure|footer|form|head|header|hgroup|li|mark|meter|nav|ol|output|p|progress|rp|rt|ruby|script|section|select|small|style|summary|table|tbody|tfoot|thead|time|tr|ul|video)\\b.*?>\n\t\t|<!--(?!.*--\\s*>)\n\t\t|^<!--\\ \\#tminclude\\ (?>.*?-->)$\n\t\t|<\\?(?:php)?.*\\b(if|for(each)?|while)\\b.+:\n\t\t|\\{\\{?(if|foreach|capture|literal|foreach|php|section|strip)\n\t\t|\\{\\s*($|\\?>\\s*$|//|/\\*(.*\\*/\\s*$|(?!.*?\\*/)))\n\t\t)",
  "foldingStopMarker": "(?x)\n\t\t(</(?i:a|article|aside|audio|blockquote|body|canvas|datalist|details|div|dl|fieldset|figcaption|figure|footer|form|head|header|hgroup|li|mark|meter|nav|ol|output|p|progress|rp|rt|ruby|script|section|select|small|style|summary|table|tbody|tfoot|thead|time|tr|ul|video)>\n\t\t|^(?!.*?<!--).*?--\\s*>\n\t\t|^<!--\\ end\\ tminclude\\ -->$\n\t\t|<\\?(?:php)?.*\\bend(if|for(each)?|while)\\b\n\t\t|\\{\\{?/(if|foreach|capture|literal|foreach|php|section|strip)\n\t\t|^[^{]*\\}\n\t\t)",
  "keyEquivalent": "^~H",

  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#variables" },
    { "include": "#variable-types" },
    { "include": "#defines" },
    { "include": "#commands" },
    { "include": "#numbers" },
    { "include": "#reserved_words" },
    { "include": "#types" },
    { "include": "#HTML5" }
  ],

  "repository": {

    "variables": {
      "patterns": [
        {
            "begin": "<",
            "end": ">",
            "name": "variable.language.bis"
        }
      ]
    },

    "variable-types": {
      "patterns": [
        {
            "match": "(?<=(?:>)).?(i|h|s|f)",
            "name": "constant.numeric.bis"
        }
      ]
    },

    "numbers": {
      "patterns": [
        {
          "match": "(?x:         # turn on extended mode\n\t\t\t             -?         # an optional minus\n\t\t\t             (?:\n\t\t\t               0        # a zero\n\t\t\t               |        # ...or...\n\t\t\t               [1-9]    # a 1-9 character\n\t\t\t               \\d*      # followed by zero or more digits\n\t\t\t             )\n\t\t\t             (?:\n\t\t\t               (?:\n\t\t\t                 \\.     # a period\n\t\t\t                 \\d+    # followed by one or more digits\n\t\t\t               )?\n\t\t\t               (?:\n\t\t\t                 [eE]   # an e character\n\t\t\t                 [+-]?  # followed by an option +/-\n\t\t\t                 \\d+    # followed by one or more digits\n\t\t\t               )?       # make exponent optional\n\t\t\t             )?         # make decimal portion optional\n\t\t\t           )",
          "name": "constant.numeric.bis"
        }
      ]
    },

    "types": {
      "patterns": [
        {
          "match": "(\\¬|\\'¬')",
          "name": "markup.raw.bis"
        },
        {
          "match": "^:.*$",
          "name": "character.escaped.bis"
        },
        {
          "match": "^\\.\\w.*$",
          "name": "title.bis"
        }
      ]
    },

    "defines": {
      "patterns": [
        {
          "match": "([A-Z]+_)",
          "comment": "Matches defines",
          "name": "meta.tag.bis"
        },
        {
          "match": "([A-Za-z]+_)",
          "comment": "Matches defines",
          "name": "support.function.bis"
        }
      ]
    },

    "comments": {
      "patterns": [
        {
         "name": "comment.multiline.bis",
          "comment": "Find commented out lines",
          "begin": "^\\@(\\.|\\s\\.|\\s\\s\\.|\\s\\s\\s\\.|\\s\\s\\s\\s\\.)",
          "beginCaptures": {
            "0": {
              "name": "comment.multiline.begin.bis"
            }
          },
          "comment": "?= look ahead for lines not starting with @.",
          "end": "(?=^@?[^\\.])",
          "endCaptures": {
            "0": {
              "name": "comment.multiline.end.bis"
            }
          }
        }
      ]
    },

    "reserved_words": {
      "patterns": [
        {
          "name": "constant.other.bis",
          "match": "(?i:ACDRW|ACTINP|ACTWIN|ADRW|ADRW1|ADRW2|ADRW3|ADRW4|ADRW5|ADRW6|ADRW7|ADRW8|AEDRW|AKEY|APILVL|AREA|ASPECT|AXDRW|BPORT|CAB|CAB1|CALL|CDRW|CERR|CHAR|CHKPSW|CHR|COLOR|CPRIV|CRPT|CURH|CURSEC|CURV|DATA|DATE0|DATE1|DATE2|DATE3|DATE4|DATE5|DATE6|DATE7|DATE8|DATE9|DATE10|DATE11|DATE12|DATE13|DATE14|DATE15|DATE16|DATE17|DATE18|DATE19|DATE20|DAY|DBASE|DBTHRS|DBUSG|DEPN|DEPT|DFUMAX|DLINE|DLP|DRW|DRW1|DRW2|DRW3|DRW4|DRW5|DRW6|DRW7|DRW8|DRW9|DRW10|DRW11|DRW12|DRW13|DRW14|DRW15|DRW16|DTM|DTNAM|DWCAP|ECAB|EDRW|ELINE|ENVSTR|ERPT|ERID|ESC|ETYPE|FCAB|FCC|FDRW|FFTYPE|FIELD|FKEY|FMT|FPAGE|FRESTR|FRPT|GLBSTR|GRAPH|HLINES|ICVAR|INMSV|INPUT|INSTR|INVAR|INVR1|IO|IP|LANG|LCAB|LEVEL|LIBDRW|LINE|LINK|LITEM|LLP|LNKDRW|LNKRPT|LOOK|LRRSD|MAPNAM|MAXCAB|MAXCHR|MAXDRW|MAXEVR|MAXGVR|MAXGVR|MAXLAB|MAXLIN|MAXLNS|MAXRNM|MAXRPT|MAXRW|MAXVAR|MODE|MODE1|MSEC|MSGQ|MXDEPN|NET|NETDRW|NETOUT|NETRPT|NETSIT|ODEPN|OLINE|OPRIV|ORSTAN|ORUN|OSITE|OSFILS|OSPLEN|OSTNUM|OSUIDS|OSUSER|OSYSNAM|OUSER|PLNG|PRGM|RPRIV|RPT|RRSID|RSLANT|RUN|SCNH|SCNV|SCREEN|SECDRW|SECGRP|SECRPT|SECURE|SITE|SOE|SOEH|SOEV|SPRIV|STAT1|STAT2|STAT3|STAT4|STNUM|SYSNAM|TAB|TCCS|TIC|TIME|TTYPE|USER|WND|WS|WSIPA|WSITE|XDRW|XERR|XFUN|XKEY|XLINE|XRID|XRPT|XTYPE|YEAR|)\\$"
        }
      ]
    },

    "commands": {
      "patterns": [
        {
          "name": "keyword.other.bis",
          "match": "\\b(?i:ADD|ADR|ART|AUX|BBO|BCO|BFN|BLT|BPO|BRG|BRK|BTN|CAH|CAL|CAL|CALL|CAR|CAU|CBX|CCC|CCG|CCI|CCP|CCR|CER|CHD|CHG|CLK|CLT|CLS|CLV|CMU|CMP|CNT|CSR|DAT|DC|DCR|DCU|DDE|DDI|DEC|DEF|DEL|DEV|DFA|DFC|DFU|DIR|DLR|DRW|DSF|DSG|DSM|DSP|DSX|DUL|DUP|DVS|ECR|EDT|ESR|EXT|FC|FCH|FDR|FIL|FKY|FMT|FND|FON|GEN|GOC|GS|GTO|HELP|HID|HSH|IDU|IF|INC|IND|INP|JUV|KEY|KLL|LCH|LCV|LDA|LDV|LFC|LFN|LGL|LGN|LGF|LGS|LLN|LMG|LN|LN+|LN-|LNA|LND|LNG|LNI|LNK|LNM|LNP|LNX|LNY|LOG|LOC|LOK|LSM|LST|LZR|MAU|MBX|MCH|MNU|MQL|MSG|NAMLST|NAMDMP|NET|NOF|NRD|NRM|NRN|NRT|NWR|OK|OS|OUT|OUM|PC|PCF|PCR|PCW|PIC|PNT|PRT|QCLS|QGET|QINQ|QOPN|QPUT|RAM|RAR|RDC|RDL|REL|RELRNM|REP|RER|RET|RETURN|RFM|RGN|RLN|RNM|RPW|RRN|RSL|RSR|RTN|RUN|SC|SCH|SCN|SEN|SFC|SGPUT|SGGET|SHW|SIZ|SNU|SOR|SPI|SQL|SRH|SRR|SRU|STN|STR|SUB|SYS|TIP|TOT|TPC|TPS|TRC|TXT|ULK|UNX|UPD|USE|WAT|WDC|WDL|WIN|WPR|WRL|XIT|XQT|XUN)\\b"
        },
        {
          "name": "keyword.control.bis",
          "match": "\\b(?i:if|gt|eq|lt|le|ge)\\b"
        },
        {
          "name": "invalid.illegal.bis",
          "match": "\\b(?i:rdb)\\b"
        }
      ]
    },

    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.bis",
          "match": "(\".*?\")"
        },
        {
          "name": "string.quoted.single.bis",
          "match": "('.*?')"
        }
      ]
    }
  },
  "scopeName": "source.bis",
  "uuid": "e3b57491-c741-459d-b57d-9ce935ff0796"
}

